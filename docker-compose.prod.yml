services:
  app:
    build:
      context: .
      target: app
      args:
        PHP_VERSION: ${PHP_VERSION:-8.3}
    image: ${APP_IMAGE:-laravel-app}
    restart: unless-stopped
    env_file:
      - ${APP_ENV_FILE:-.env}
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      LOG_CHANNEL: ${LOG_CHANNEL:-stderr}
    volumes:
      - storage:/var/www/html/storage
    depends_on:
      db:
        condition: service_healthy
    networks:
      - laravel

  web:
    build:
      context: .
      target: web
    image: ${WEB_IMAGE:-laravel-web}
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_}
    volumes:
      - storage:/var/www/html/storage:ro
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  storage:
  db-data:
